- name: install catalogue
  hosts: localhost
  become: yes
  tasks:
  - name: enable and disable nodejs
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
  
  - name: install nodejs
    ansible.builtin.dnf:
     name: nodejs
     state: present
    
  - name: add user roboshop
    ansible.builtin.user:
     name: roboshop

  - name: Recursively remove directory
    ansible.builtin.file:
     path: /app
     state: absent

  - name: create directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download app code
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
     dest: /tmp

  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
     src: /tmp/catalogue.zip
     dest: /app
     remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
     chdir: /app

  - name: install systemd applications
    ansible.builtin.copy:
     src: catalogue.service
     dest: /etc/systemd/system/catalogue.service

  - name: daemon reload
    ansible.builtin.systemd_service:
     daemon_reload: true

  - name: copy mongodb repo
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb
    ansible.builtin.dnf:
     name: mongodb-org-shell
     state: present

  - name: get the categories count
    ansible.builtin.command:  mongo --host mongodb.daws74s.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count

  # - name: print the count
  #   ansible.builtin.debug:
  #     msg: "product count: {{product_count}}"

  - name: load catalogue data
    ansible.builtin.command: mongo --host mongodb.daws74s.online < /app/schema/catalogue.js
    when: product_count.stdout == "0" # keep double quotes

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes